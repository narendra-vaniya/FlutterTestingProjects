// Mocks generated by Mockito 5.4.4 from annotations
// in unit_test/test/product_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;

import '../bin/product_controller.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductModel_0 extends _i1.SmartFake implements _i2.ProductModel {
  _FakeProductModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductService extends _i1.Mock implements _i2.ProductService {
  @override
  _i3.Future<List<_i2.ProductModel>> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue:
            _i3.Future<List<_i2.ProductModel>>.value(<_i2.ProductModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i2.ProductModel>>.value(<_i2.ProductModel>[]),
      ) as _i3.Future<List<_i2.ProductModel>>);

  @override
  _i3.Future<_i2.ProductModel> getProduct(num? id) => (super.noSuchMethod(
        Invocation.method(
          #getProduct,
          [id],
        ),
        returnValue: _i3.Future<_i2.ProductModel>.value(_FakeProductModel_0(
          this,
          Invocation.method(
            #getProduct,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.ProductModel>.value(_FakeProductModel_0(
          this,
          Invocation.method(
            #getProduct,
            [id],
          ),
        )),
      ) as _i3.Future<_i2.ProductModel>);

  @override
  _i3.Future<List<String>> getCategories() => (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);

  @override
  _i3.Future<List<_i2.ProductModel>> getProductsByCategory(String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductsByCategory,
          [category],
        ),
        returnValue:
            _i3.Future<List<_i2.ProductModel>>.value(<_i2.ProductModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i2.ProductModel>>.value(<_i2.ProductModel>[]),
      ) as _i3.Future<List<_i2.ProductModel>>);
}
